Basic Setup:
git init
git remote add origin [URL}
git fetch --all
git pull origin master

Remove:
rm -rf .git -> delete .git
git remote remove origin -> remove origin

Clone:
git clone [URL]
git fetch = get files from remote repository
git pull = git init + git remote add origin [URL] + git fetch + git merge

Getting & Creating Projects:
git init -> initialize a local git repository
git clone ssh://git@github.com/[username]/[repository-name].git -> create a local copy of a remote repository

Basic Snapshotting:
git status -> check status
git add [file-name.txt] -> add a file to the staging area
git add -A or git add . -> add all new and changed files to the staging area
git commit -a -> commit all files
-a -> all
-m -> message
-u -> remember
git commit -m "[commit message]" -> commit changes
git rm -r [file-name.txt] -> remove a file (or folder)

Branching & Merging:
git branch -> list branches (the asterisk denotes the current branch)
git branch -a -> list all branches (local and remote)
git branch [branch name] -> create a new branch
git branch -d [branch name] -> delete a branch
git branch --merged -> check merged branch
git push origin --delete [branch name] -> delete a remote branch
git checkout -b [branch name] -> create a new branch and switch to it
git checkout -b [branch name] origin/[branch name] -> clone a remote branch and switch to it
git branch -m [old branch name] [new branch name] -> rename a local branch
git checkout [branch name] -> switch to a branch
git checkout [first 7 digits] -> switch to a commit
git ls-files -> list files in branch
git checkout -- [file-name.txt] -> discard changes to a file
git merge [branch name] -> merge a branch into the active branch
git merge [source branch] [target branch] -> merge a branch into a target branch
git stash -> stash changes in a dirty working directory
git stash clear -> remove all stashed entries

Sharing & Updating Projects:
git push origin [branch name] -> push a branch to your remote repository
git push -u origin [branch name] -> push changes to remote repository (and remember the branch]
git push -> push changes to remote repository (remembered branch) (repository already defined)
git push origin --delete [branch name] delete a remote branch (repository not defined yet)
git pull -> update local repository to the newest commit
git pull origin [branch name] -> pull changes from remote repository
git remote add origin ssh://git@github.com/[username]/[repository-name].git
git remote set-url origin ssh://git@github.com/[username]/repository-name].git

Inspection & Comparison:
q -> exit
h -> help
git log -> view changes
git log --summary -> view changes (detailed)
git log --oneline -> view changes (briefly)
git log --all --decorate --oneline --graph --view HEAD and branch in graph
git diff [source branch] [target branch] -> preview changes before merging